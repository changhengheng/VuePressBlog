(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{646:function(v,_,t){"use strict";t.r(_);var e=t(21),l=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("每天吃什么这种问题是很简单的，不需要思考太多就能解决。对于一些复杂问题，最直观的感受是不知道从哪里着手，对这类问题就必须要进行拆解才能解决。")]),v._v(" "),t("p",[v._v("首先，什么是复杂问题，曲凯老师（得到app）给的定义是"),t("strong",[v._v("复杂问题就是掺杂了多个维度和变量的问题。")]),v._v(" 他接着说，拆解问题就是找到复杂问题中的"),t("strong",[v._v("元问题")]),v._v("，而所谓元问题即是复杂问题中的那些最本质、最细小的待解决的问题。")]),v._v(" "),t("p",[v._v("这个复杂问题的解释我是可以接受的，而后面的这个概念有点反常识。我更倾向于下面这种解释：")]),v._v(" "),t("blockquote",[t("p",[v._v("拆解问题就是找到复杂问题中的一系列自己可以着手去做的、能够促成问题最终被解决的问题")])]),v._v(" "),t("p",[v._v("所以说，拆解问题就是找其中的小问题。因为它们之间联系紧密，在结构上最终形成了一个自己无法直接解决的复杂问题，每一个小问题都为保持这个复杂问题的复杂程度而服务。逐一解决这些小问题就能够逐渐削弱复杂问题的复杂程度，最终就能够解决这个问题。")]),v._v(" "),t("p",[v._v("这里经常出现一个思维误区，也是非常戏剧性的，就是人们知道需要拆解问题，但是在面对这样一个复杂问题时，他们最终拆解出了与这个复杂问题"),t("strong",[v._v("毫不相关的小问题")]),v._v("，要警惕自己进入这个思维误区。")]),v._v(" "),t("p",[v._v("曲凯老师给的其它一些建议：")]),v._v(" "),t("ul",[t("li",[v._v("复杂问题是不能直接被解决的，它需要被拆解")]),v._v(" "),t("li",[v._v("有意识地训练拆解问题、解决问题的习惯，培养自己最终形成这样的能力，而不再依靠下意识去处理")]),v._v(" "),t("li",[v._v("拆解成元问题，就可以落地被解决，就会开始有逻辑、有方法（因为自己的心智可以处理这种层面的问题），自己就可以开始去解决这些问题了")]),v._v(" "),t("li",[v._v("用公式思维拆解问题")]),v._v(" "),t("li",[v._v("拆解问题有助于从整体上认识问题，而解决问题是从具体层面开始行动的，既见树木又见森林")])]),v._v(" "),t("h2",{attrs:{id:"用公式思维拆解问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用公式思维拆解问题"}},[v._v("#")]),v._v(" 用公式思维拆解问题")]),v._v(" "),t("p",[v._v("第一步，遇到问题时问自己----这个问题的公式是什么？")]),v._v(" "),t("blockquote",[t("p",[v._v("复杂问题 = 小问题 * 小问题 * 小问题 * 小问题 * 小问题……")])]),v._v(" "),t("p",[v._v("第二步，赋值，量化问题，可以有一个直观的感受，可以估算任务（最好的方式是亲自实践累积数据、并不断优化）")]),v._v(" "),t("blockquote",[t("p",[v._v("复杂问题（10000） = 小问题（10） * 小问题（10） * 小问题（10） * 小问题（10） * 小问题（10）……")])]),v._v(" "),t("p",[v._v("实际情况下还会有其他运算，比如计算收入需要减去成本等等。")])])}),[],!1,null,null,null);_.default=l.exports}}]);